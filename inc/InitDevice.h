//=========================================================
// inc/InitDevice.h: generated by Hardware Configurator
//
// This file will be regenerated when saving a document.
// leave the sections inside the "$[...]" comment tags alone
// or they will be overwritten!
//=========================================================
#ifndef __INIT_DEVICE_H__
#define __INIT_DEVICE_H__

#define TMH	0xff
#define TML	0x2B

typedef union bits_byte
				{
					struct{
						uint8_t BB0:1;
						uint8_t BB1:1;
						uint8_t BB2:1;
						uint8_t BB3:1;
						uint8_t BB4:1;
						uint8_t BB5:1;
						uint8_t BB6:1;
						uint8_t BB7:1;
						} nybble;
					uint8_t Abyte;
					} BITS_BYTE;
typedef enum
			{
				START=0,
				ADDRESS,
				DATA,
				STOP,
				END
				} DALI_TXFRAME;
typedef enum
{
	ACTIVE_LOW=0,
	ACTIVE_HIGH=1
}INTPOLARITY;


/* Manchester Encoder Methods */

void ManchesterEncoder (uint8_t input);
void SetBusyFlag();
void ClearBusyFlag();
bit GetBusyFlag();
bit GetMDOutput();
void SetMDOutput();
void ClearMDOutput();

void ReloadDaliTxTimer(uint8_t reloadH, uint8_t reloadL);
void StartDaliTxTimer();
uint16_t GetDaliTxTimer();
void StopDaliTxTimer();

void DaliFrameStart();
void DaliFrameStop();
void DaliTXStateMachine(uint8_t address, uint8_t Ddata);

void SetDaliOutputPin();
void ClearDaliOutputPin();
bit GetDaliOutputPin();
void DaliTxHandler();

void SetDaliStopFlag();
void ClearDaliStopFlag();
bit GetDaliStopFlag();


//Dali RX

void StartDaliRxTimer();
void StopDaliRxTimer();
uint16_t GetDaliRxTimer();

bit GetDaliIntputPin();
void QueryDaliBus();
void IncBusQuietCounter();
void ClearBusQuietCounter();
uint8_t GetBusQuietCounter();
void SetDaliInputPinPolarity (INTPOLARITY input);
void EnableInt1 ();
void DisableInt1 ();



// USER CONSTANTS
// USER PROTOTYPES




// $[Mode Transition Prototypes]
extern void enter_DefaultMode_from_RESET(void);
// [Mode Transition Prototypes]$

// $[Config(Per-Module Mode)Transition Prototypes]
extern void WDT_0_enter_DefaultMode_from_RESET(void);
extern void PORTS_2_enter_DefaultMode_from_RESET(void);
extern void PBCFG_0_enter_DefaultMode_from_RESET(void);
extern void TIMER01_0_enter_DefaultMode_from_RESET(void);
extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void);
extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void);
// [Config(Per-Module Mode)Transition Prototypes]$


#endif

